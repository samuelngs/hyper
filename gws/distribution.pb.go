// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distribution.proto

/*
Package gws is a generated protocol buffer package.

It is generated from these files:
	distribution.proto

It has these top-level messages:
	Distribution
	Filter
	Condition
*/
package gws

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Distribution struct {
	Field     string     `protobuf:"bytes,10,opt,name=field" json:"field,omitempty"`
	Payload   []byte     `protobuf:"bytes,20,opt,name=payload,proto3" json:"payload,omitempty"`
	Filters   []*Filter  `protobuf:"bytes,30,rep,name=filters" json:"filters,omitempty"`
	Condition *Condition `protobuf:"bytes,50,opt,name=condition" json:"condition,omitempty"`
}

func (m *Distribution) Reset()                    { *m = Distribution{} }
func (m *Distribution) String() string            { return proto.CompactTextString(m) }
func (*Distribution) ProtoMessage()               {}
func (*Distribution) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Distribution) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Distribution) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Distribution) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *Distribution) GetCondition() *Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

type Filter struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	// Types that are valid to be assigned to ValOneof:
	//	*Filter_StringValue
	//	*Filter_IntValue
	//	*Filter_FloatValue
	//	*Filter_BoolValue
	//	*Filter_BytesValue
	//	*Filter_TimeValue
	ValOneof isFilter_ValOneof `protobuf_oneof:"val_oneof"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isFilter_ValOneof interface {
	isFilter_ValOneof()
}

type Filter_StringValue struct {
	StringValue string `protobuf:"bytes,10,opt,name=string_value,json=stringValue,oneof"`
}
type Filter_IntValue struct {
	IntValue int64 `protobuf:"varint,11,opt,name=int_value,json=intValue,oneof"`
}
type Filter_FloatValue struct {
	FloatValue float64 `protobuf:"fixed64,12,opt,name=float_value,json=floatValue,oneof"`
}
type Filter_BoolValue struct {
	BoolValue bool `protobuf:"varint,13,opt,name=bool_value,json=boolValue,oneof"`
}
type Filter_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,14,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}
type Filter_TimeValue struct {
	TimeValue int64 `protobuf:"varint,15,opt,name=time_value,json=timeValue,oneof"`
}

func (*Filter_StringValue) isFilter_ValOneof() {}
func (*Filter_IntValue) isFilter_ValOneof()    {}
func (*Filter_FloatValue) isFilter_ValOneof()  {}
func (*Filter_BoolValue) isFilter_ValOneof()   {}
func (*Filter_BytesValue) isFilter_ValOneof()  {}
func (*Filter_TimeValue) isFilter_ValOneof()   {}

func (m *Filter) GetValOneof() isFilter_ValOneof {
	if m != nil {
		return m.ValOneof
	}
	return nil
}

func (m *Filter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Filter) GetStringValue() string {
	if x, ok := m.GetValOneof().(*Filter_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Filter) GetIntValue() int64 {
	if x, ok := m.GetValOneof().(*Filter_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (m *Filter) GetFloatValue() float64 {
	if x, ok := m.GetValOneof().(*Filter_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (m *Filter) GetBoolValue() bool {
	if x, ok := m.GetValOneof().(*Filter_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *Filter) GetBytesValue() []byte {
	if x, ok := m.GetValOneof().(*Filter_BytesValue); ok {
		return x.BytesValue
	}
	return nil
}

func (m *Filter) GetTimeValue() int64 {
	if x, ok := m.GetValOneof().(*Filter_TimeValue); ok {
		return x.TimeValue
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Filter) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Filter_OneofMarshaler, _Filter_OneofUnmarshaler, _Filter_OneofSizer, []interface{}{
		(*Filter_StringValue)(nil),
		(*Filter_IntValue)(nil),
		(*Filter_FloatValue)(nil),
		(*Filter_BoolValue)(nil),
		(*Filter_BytesValue)(nil),
		(*Filter_TimeValue)(nil),
	}
}

func _Filter_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Filter)
	// val_oneof
	switch x := m.ValOneof.(type) {
	case *Filter_StringValue:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Filter_IntValue:
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.IntValue))
	case *Filter_FloatValue:
		b.EncodeVarint(12<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.FloatValue))
	case *Filter_BoolValue:
		t := uint64(0)
		if x.BoolValue {
			t = 1
		}
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Filter_BytesValue:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.BytesValue)
	case *Filter_TimeValue:
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TimeValue))
	case nil:
	default:
		return fmt.Errorf("Filter.ValOneof has unexpected type %T", x)
	}
	return nil
}

func _Filter_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Filter)
	switch tag {
	case 10: // val_oneof.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ValOneof = &Filter_StringValue{x}
		return true, err
	case 11: // val_oneof.int_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValOneof = &Filter_IntValue{int64(x)}
		return true, err
	case 12: // val_oneof.float_value
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.ValOneof = &Filter_FloatValue{math.Float64frombits(x)}
		return true, err
	case 13: // val_oneof.bool_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValOneof = &Filter_BoolValue{x != 0}
		return true, err
	case 14: // val_oneof.bytes_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.ValOneof = &Filter_BytesValue{x}
		return true, err
	case 15: // val_oneof.time_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValOneof = &Filter_TimeValue{int64(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Filter_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Filter)
	// val_oneof
	switch x := m.ValOneof.(type) {
	case *Filter_StringValue:
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Filter_IntValue:
		n += proto.SizeVarint(11<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.IntValue))
	case *Filter_FloatValue:
		n += proto.SizeVarint(12<<3 | proto.WireFixed64)
		n += 8
	case *Filter_BoolValue:
		n += proto.SizeVarint(13<<3 | proto.WireVarint)
		n += 1
	case *Filter_BytesValue:
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.BytesValue)))
		n += len(x.BytesValue)
	case *Filter_TimeValue:
		n += proto.SizeVarint(15<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.TimeValue))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Condition struct {
	EqIDs  []int64  `protobuf:"varint,10,rep,packed,name=EqIDs" json:"EqIDs,omitempty"`
	NeIDs  []int64  `protobuf:"varint,11,rep,packed,name=NeIDs" json:"NeIDs,omitempty"`
	EqKeys []string `protobuf:"bytes,20,rep,name=EqKeys" json:"EqKeys,omitempty"`
	NeKeys []string `protobuf:"bytes,21,rep,name=NeKeys" json:"NeKeys,omitempty"`
}

func (m *Condition) Reset()                    { *m = Condition{} }
func (m *Condition) String() string            { return proto.CompactTextString(m) }
func (*Condition) ProtoMessage()               {}
func (*Condition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Condition) GetEqIDs() []int64 {
	if m != nil {
		return m.EqIDs
	}
	return nil
}

func (m *Condition) GetNeIDs() []int64 {
	if m != nil {
		return m.NeIDs
	}
	return nil
}

func (m *Condition) GetEqKeys() []string {
	if m != nil {
		return m.EqKeys
	}
	return nil
}

func (m *Condition) GetNeKeys() []string {
	if m != nil {
		return m.NeKeys
	}
	return nil
}

func init() {
	proto.RegisterType((*Distribution)(nil), "gws.Distribution")
	proto.RegisterType((*Filter)(nil), "gws.Filter")
	proto.RegisterType((*Condition)(nil), "gws.Condition")
}

func init() { proto.RegisterFile("distribution.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xd1, 0x6a, 0xdb, 0x30,
	0x14, 0x86, 0x2d, 0xcc, 0x92, 0xe8, 0xc8, 0xcb, 0x86, 0xc8, 0x86, 0x6e, 0xb6, 0x69, 0x19, 0x03,
	0x5d, 0x94, 0x5c, 0xa4, 0x6f, 0xd0, 0x26, 0xc5, 0xa5, 0x90, 0x0b, 0x5d, 0xf4, 0x36, 0xd8, 0xb5,
	0x6c, 0x44, 0x5d, 0x2b, 0x89, 0x95, 0x04, 0x3f, 0x47, 0x1f, 0xb5, 0x2f, 0x50, 0x24, 0xd9, 0x69,
	0xef, 0xfc, 0x7f, 0xe7, 0xe3, 0xf8, 0xe7, 0xd8, 0x40, 0x0b, 0xdd, 0xda, 0x83, 0xce, 0x8f, 0x56,
	0x9b, 0x66, 0xb1, 0x3b, 0x18, 0x6b, 0x68, 0x5c, 0x9d, 0xdb, 0xf9, 0x2b, 0x82, 0x64, 0xf5, 0x69,
	0x46, 0x67, 0xf0, 0xa5, 0xd4, 0xaa, 0x2e, 0x18, 0x70, 0x24, 0xb0, 0x0c, 0x81, 0x32, 0x18, 0xef,
	0xb2, 0xae, 0x36, 0x59, 0xc1, 0x66, 0x1c, 0x89, 0x44, 0x0e, 0x91, 0xfe, 0x87, 0x71, 0xa9, 0x6b,
	0xab, 0x0e, 0x2d, 0xfb, 0xcd, 0x63, 0x41, 0x96, 0x64, 0x51, 0x9d, 0xdb, 0xc5, 0x9d, 0x67, 0x72,
	0x98, 0xd1, 0x2b, 0xc0, 0x4f, 0xa6, 0x29, 0xb4, 0x7b, 0x07, 0x5b, 0x72, 0x24, 0xc8, 0x72, 0xea,
	0xc5, 0xdb, 0x81, 0xca, 0x0f, 0x61, 0xfe, 0x86, 0x60, 0x14, 0x36, 0xd0, 0xef, 0x10, 0x3f, 0xab,
	0x8e, 0x21, 0xdf, 0xc6, 0x3d, 0xd2, 0x7f, 0x90, 0xb8, 0xbe, 0x4d, 0xb5, 0x3d, 0x65, 0xf5, 0x51,
	0x85, 0xa2, 0x69, 0x24, 0x49, 0xa0, 0x8f, 0x0e, 0xd2, 0x5f, 0x80, 0x75, 0x63, 0x7b, 0x83, 0x70,
	0x24, 0xe2, 0x34, 0x92, 0x13, 0xdd, 0xd8, 0x30, 0xfe, 0x0b, 0xa4, 0xac, 0x4d, 0x36, 0x08, 0x09,
	0x47, 0x02, 0xa5, 0x91, 0x04, 0x0f, 0x83, 0xf2, 0x07, 0x20, 0x37, 0xa6, 0xee, 0x8d, 0xaf, 0x1c,
	0x89, 0x49, 0x1a, 0x49, 0xec, 0xd8, 0x65, 0x47, 0xde, 0x59, 0xd5, 0xf6, 0xc6, 0xd4, 0xdd, 0xc5,
	0xed, 0xf0, 0xf0, 0xb2, 0xc3, 0xea, 0x17, 0xd5, 0x1b, 0xdf, 0xfa, 0x1a, 0xd8, 0x31, 0x2f, 0xdc,
	0x10, 0xc0, 0xa7, 0xac, 0xde, 0x9a, 0x46, 0x99, 0x72, 0x5e, 0x01, 0xbe, 0x5c, 0xc3, 0x7d, 0x87,
	0xf5, 0xfe, 0x7e, 0xd5, 0x32, 0xe0, 0xb1, 0x88, 0x65, 0x08, 0x8e, 0x6e, 0x94, 0xa3, 0x24, 0x50,
	0x1f, 0xe8, 0x4f, 0x18, 0xad, 0xf7, 0x0f, 0xaa, 0x6b, 0xd9, 0x8c, 0xc7, 0x02, 0xcb, 0x3e, 0x39,
	0xbe, 0x51, 0x9e, 0xff, 0x08, 0x3c, 0xa4, 0x7c, 0xe4, 0x7f, 0x80, 0xeb, 0xf7, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x9a, 0xdb, 0xbd, 0x97, 0x16, 0x02, 0x00, 0x00,
}
